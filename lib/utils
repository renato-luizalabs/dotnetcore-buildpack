#!/usr/bin/env bash

function install_dotnet() {
  local BUILD_DIR="$1"
  local CACHE_DIR="$2"
  local ZIP_NAME="dotnet-sdk-2.2.103-linux-x64.tar.gz"

  if [ ! -f $CACHE_DIR/$ZIP_NAME ]; then
    curl -sSL -o $CACHE_DIR/$ZIP_NAME https://download.visualstudio.microsoft.com/download/pr/296e116b-30d7-4e1c-8238-ec8c7c4c7b79/43d6cd35d95e38675d472c56a24c3bd0/dotnet-sdk-2.2.103-linux-x64.tar.gz
  else
    echo "$ZIP_NAME from cache folder"
  fi

  mkdir -p ${BUILD_DIR}/.heroku/dotnet && tar zxf $CACHE_DIR/$ZIP_NAME -C ${BUILD_DIR}/.heroku/dotnet
}

# https://github.com/ddollar/heroku-buildpack-apt
function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

export_env_dir() {
  local env_dir=$1
  if [ -d "$env_dir" ]; then
    local whitelist_regex=${2:-''}
    local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|LANG)$'}
    if [ -d "$env_dir" ]; then
      for e in $(ls $env_dir); do
        echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
        export "$e=$(cat $env_dir/$e)"
        :
      done
    fi
  fi
}

function install_newrelic() {
  local BUILD_DIR="$1"
  local CACHE_DIR="$2"
  local ZIP_NAME="newrelic-netcore20-agent_8.6.45.0_amd64.tar.gz"
  
  if [ ! -f $CACHE_DIR/$ZIP_NAME ]; then
    curl -sSL -o $CACHE_DIR/$ZIP_NAME http://download.newrelic.com/dot_net_agent/previous_releases/8.6.45.0/newrelic-netcore20-agent_8.6.45.0_amd64.tar.gz
  else
    echo "$ZIP_NAME from cache folder"
  fi

  mkdir -p ${BUILD_DIR}/.heroku/newrelic && tar zxf $CACHE_DIR/$ZIP_NAME -C ${BUILD_DIR}/.heroku/newrelic
}
